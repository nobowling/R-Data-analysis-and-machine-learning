# Find the mean mpg value using dplyr.
summarise(df, mean(mpg))
# Use pipe operators to get the mean hp value for cars with 6 cylinders.
df %>% filter(cyl == 6) %>% summarise(mean(hp))
mtcars %>% filter(cyl == 6) %>% summarise(mean(hp))
install.packages("ggplot2")
library(readr)
Economist_Assignment_Data <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv")
View(Economist_Assignment_Data)
View(Economist_Assignment_Data)
library(ggplot2)
library(readr)
df <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv")
df
df <- df[,1]
df
df <- df[,-1]
df
df <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv")
df <- df[,-1]
df
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(color=Reagion)
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(color=Region)
pl <- ggplot(df, aes(x=CPI, y=HDI))
pl
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region))
pl
# Make plot of data set
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region, shape = 1))
pl
# Make plot of data set
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region), shape = 1)
pl
# Make plot of data set
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region), shape = 1, size = 3)
pl
# Make plot of data set
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region), shape = 1, size = 4)
pl
#
pl + geom_smooth(aes(group = 1))
#
pl + geom_smooth(aes(group = 1), method = 'lm', formula = y ~ log(x))
#
pl + geom_smooth(aes(group = 1), method = 'lm', formula = y ~ log(x), se = FALSE, color = 'red')
# Add trend line + little styling
pl2 <- pl + geom_smooth(aes(group = 1), method = 'lm', formula = y ~ log(x), se = FALSE, color = 'red')
pl2
# Add labels
pl2 + geom_text(aes(label = Country))
# Add labels
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20", data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
install.packages("ggplot2")
library(ggplot2)
library(readr)
# Import csv and drop unneeded first column
df <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv")
df <- df[,-1]
# Make plot of data set + add some styling
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region), shape = 1, size = 4)
# Add trend line + little styling
pl2 <- pl + geom_smooth(aes(group = 1), method = 'lm', formula = y ~ log(x), se = FALSE, color = 'red')
# Add labels (only subset of countries)
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20", data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pl3
pl3 + theme_bw()
pl4 <- pl3 + theme_bw()
pl4 + scale_x_continuous(name = CPI, limits = 1:10, breaks = 1:10)
# Import csv and drop unneeded first column
df <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv")
df <- df[,-1]
# Make plot of data set + add some styling
pl <- ggplot(df, aes(x=CPI, y=HDI)) + geom_point(aes(color = Region), shape = 1, size = 4)
# Add trend line + little styling
pl2 <- pl + geom_smooth(aes(group = 1), method = 'lm', formula = y ~ log(x), se = FALSE, color = 'red')
# Add labels (only subset of countries)
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20", data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl4 <- pl3 + theme_bw()
pl4 + scale_x_continuous(name = CPI, limits = 1:10, breaks = 1:10)
pl4
pl4 + scale_x_continuous(name = x, limits = 1:10, breaks = 1:10)
pl4 + scale_x_continuous(name = CPI, limits = 1:10, breaks = 1:10)
pl4 + scale_x_continuous(name = kulli, limits = 1:10, breaks = 1:10)
pl4 + scale_x_continuous(name = CPI, limits = 1:10, breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = 1:10, breaks = 1:10)
pl4
pl4 + scale_x_continuous(name = 'CPI', limits = 2:10, breaks = 1:10)
pl4
pl4 + scale_x_continuous(name = 'CPI', limits = 1:10, breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = 1, breaks = 1:10)
pl4
pl4 + scale_x_continuous(name = 'CPI', limits = 1, breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = 0:10, breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = c(1:10), breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = c(0, 10), breaks = 1:10)
pl4 + scale_x_continuous(name = 'CPI', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = "Human development Index", limits = c(0, 1), breaks = )
pl4 + scale_x_continuous(name = 'CPI', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = "Human development Index", limits = c(0.25, 1), breaks = )
pl4 + scale_x_continuous(name = 'CPI', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = "Human development Index", limits = c(0.25, 1))
pl4
pl5 <- pl4 + scale_x_continuous(name = 'CPI', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = "Human development Index", limits = c(0.25, 1))
pl5
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt Perception Index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = "Human development Index", limits = c(0.25, 1))
pl5
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index')
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perception index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index')
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perception index', limits = c(1, 100), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index')
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perception index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index')
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perceptions index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index')
pl6
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index') +
theme(plot.title = element_text(hjust = 0.5))
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perceptions index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1), breaks = seq(from = 0, to = 1, by = 0.2))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index') +
theme(plot.title = element_text(hjust = 0.5))
pl6
pl5 <- pl4 + scale_x_continuous(name = 'Corrupt perceptions index', limits = c(1, 10), breaks = 1:10) +
scale_y_continuous(name = 'Human development index', limits = c(0.25, 1), breaks = seq(from = 0, to = 1, by = 0.1))
pl6 <- pl5 + ggtitle('Corruption perceptions and human development index') +
theme(plot.title = element_text(hjust = 0.5))
pl6
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
df <- read.csv('Batting.csv')
df <- read.csv('C:\Users\admin.jani.leppakosk\rcourse\R-Course-HTML-Notes\R-for-Data-Science-and-Machine-Learning\Training Exercises\Capstone and Data Viz Projects\Capstone Project/Battings.csv')
library(ggplot2)
library(readr)
df <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv")
head(df)
head(df)
str(df)
head(df$AB)
head(df$X2B)
head(df$X2B)
df
head(df$`2B`)
df$BA <- df$H / df$AB
tail(df$BA)
tail(df$BA, 5)
View(df)
View(df)
df$OBP <- (df$H + df$BB + df$HBP) / (df$AB + df$BB + df$HBP + df$SF)
df$`1B` <- df$H - df$`2B` - df$`3B` - df$HR
# Add slugging percentage
df$SLG <- ((1 * df$`1B`) + (2 * df$`2B`) + (3 * df$`3B`) + (4 * df$HR) ) / df$AB
tail(df$OBP, 5)
tail(df$SLG, 5)
batting <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv")
head(batting)
str(batting)
head(batting$AB)
head(batting$`2B`)
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
# Add n base percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
# Add singles
batting$`1B` <- batting$H - batting$`2B` - batting$`3B` - batting$HR
# Add slugging percentage
batting$SLG <- ((1 * batting$`1B`) + (2 * batting$`2B`) + (3 * batting$`3B`) + (4 * batting$HR) ) / batting$AB
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yeardID >= 1985)
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
? merge
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
mergedDataFrame
View(salaries)
View(salaries)
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerdID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
lostBoys
# Get only year 2001
lostBoys <- subset(lostBoys, yearID = 2001)
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
lostBoys <- lostBoys[, wantedColumns]
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','X2B','X3B','HR','OBP','SLG','BA','AB')
lostBoys <- lostBoys[, wantedColumns]
head(lostBoys)
library(dplyr)
lostBoys <- lostBoys[, select(wantedColumns)]
lostBoys <- select(lostBoys, wantedColumns)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
mergedDataFrame
maxSalary <- 15 000 000
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB)
maxAB
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB)
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostboys$OBP)
lostBoysOBPMean <- mean(lostBoys$OBP)
mergedDataFrame
View(mergedDataFrame)
View(mergedDataFrame)
# Plot some data cause I don't know what to do
ggplot(mergedDataFrame, aes(x = 'AB', y = 'salary') + geom_point()
# Plot some data cause I don't know what to do
jee <- ggplot(mergedDataFrame, aes(x = 'AB', y = 'salary') + geom_point()
# Plot some data cause I don't know what to do
ggplot(mergedDataFrame, aes(x = 'AB', y = 'salary')) + geom_point()
# Plot some data cause I don't know what to do
ggplot(mergedDataFrame, aes(x = 'OBP', y = 'salary')) + geom_point()
# Plot some data cause I don't know what to do
ggplot(mergedDataFrame, aes(x = OBP, y = salary)) + geom_point()
# Plot some data cause I don't know what to do
ggplot(mergedDataFrame, aes(x = AB, y = salary)) + geom_point()
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBP <- mergedDataFrame$OBP + mergedDataFrame$AB
ggplot(mergedDataFrame, aes(x = ABOBP, y = salary)) + geom_point()
View(mergedDataFrame)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- mergedDataFrame$OBP + mergedDataFrame$AB + mergedDataFrame$SLG
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
View(mergedDataFrame)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
? filter
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG < 700)
merge
mergedDataFrame
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG > 700)
mergedDataFrame
View(mergedDataFrame)
batting <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv")
head(batting)
str(batting)
head(batting$AB)
head(batting$`2B`)
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
# Add on base percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
# Add singles
batting$`1B` <- batting$H - batting$`2B` - batting$`3B` - batting$HR
# Add slugging percentage
batting$SLG <- ((1 * batting$`1B`) + (2 * batting$`2B`) + (3 * batting$`3B`) + (4 * batting$HR) ) / batting$AB
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
# Find the replacement players
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostBoys$OBP)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
mergedDataFrame
ggplotly(mergedDataFrame)
library(plotly)
isntall.packages('plotly')
install.packages('plotly')
library(plotly)
ggplotly(mergedDataFrame)
p <- ggplotly(mergedDataFrame)
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
p <- ggplotly(mergedDataFrame)
p <- ggplotly(mergedDataFrame)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
p <- ggplotly(mergedDataFrame)
mergedDataFrame <- subset(mergedDataFrame, salary >= 6000000)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
mergedDataFrame <- subset(mergedDataFrame, salary >= 6000000)
mergedDataFrame <- subset(mergedDataFrame, salary >= 5500000)
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
mergedDataFrame <- subset(mergedDataFrame, salary >= 5500000)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
mergedDataFrame <- subset(mergedDataFrame, salary < 6000000)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
mergedDataFrame <- subset(mergedDataFrame, salary < 6000000)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
p <- ggplotly(mergedDataFrame)
source('C:/Users/admin.jani.leppakosk/rcourse/Capstone/capstonedataproject.R')
atting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
# Add singles
batting$`1B` <- batting$H - batting$`2B` - batting$`3B` - batting$HR
# Add slugging percentage
batting$SLG <- ((1 * batting$`1B`) + (2 * batting$`2B`) + (3 * batting$`3B`) + (4 * batting$HR) ) / batting$AB
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
# Find the replacement players
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostBoys$OBP)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
mergedDataFrame <- subset(mergedDataFrame, ABOBPSLG >= 700)
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point
ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
p <- ggplotly(mergedDataFrame)
?ggplotly
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
p <- ggplotly(mergedDataFrame)
p <- ggplotly(x)
p
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point(mergedDataFrame, aes(label = playerID))
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point(label = playerID)
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point(label = 'playerID')
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary)) + geom_point()
p <- ggplotly(x)
p
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary, text = playerID)) + geom_point()
p <- ggplotly(x)
p
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary, text = playerID)) + geom_point()
p <- ggplotly(x)
p
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostBoys$OBP)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
x <- ggplot(mergedDataFrame, aes(x = ABOBPSLG, y = salary, text = playerID)) + geom_point()
p <- ggplotly(x)
p
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
batting <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv")
head(batting)
str(batting)
head(batting$AB)
head(batting$`2B`)
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
# Add on base percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
# Add singles
batting$`1B` <- batting$H - batting$`2B` - batting$`3B` - batting$HR
# Add slugging percentage
batting$SLG <- ((1 * batting$`1B`) + (2 * batting$`2B`) + (3 * batting$`3B`) + (4 * batting$HR) ) / batting$AB
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
View(lostBoys)
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostBoys$OBP)
# Plot some data cause I don't know what to do
mergedDataFrame$ABOBPSLG <- (mergedDataFrame$OBP * 100) + mergedDataFrame$AB + (mergedDataFrame$SLG * 100)
mergedDataFrame <- arrange(mergedDataFrame, desc(OBP))
mergedDataFrame <- arrange(mergedDataFrame, desc(OBP), 10)
mergedDataFrame <- arrange(mergedDataFrame, desc(OBP))
mergedDataFrame
# Plot some data cause I don't know what to do
mergedDataFrame <- select(mergedDataFrame, c('OBP', 'AB', 'salary'))
mergedDataFrame
# Plot some data cause I don't know what to do
mergedDataFrame <- select(mergedDataFrame, c('playerID', 'OBP', 'AB', 'salary'))
mergedDataFrame
batting <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv")
head(batting)
str(batting)
head(batting$AB)
head(batting$`2B`)
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
# Add on base percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
# Add singles
batting$`1B` <- batting$H - batting$`2B` - batting$`3B` - batting$HR
# Add slugging percentage
batting$SLG <- ((1 * batting$`1B`) + (2 * batting$`2B`) + (3 * batting$`3B`) + (4 * batting$HR) ) / batting$AB
# Load salaries
salaries <- read_csv("R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Salaries.csv")
# Filter out battings later than 1985
batting <- subset(batting, yearID >= 1985)
# Merge batting data and salaries by playerID and yearID
mergedDataFrame <- merge(batting, salaries, by = c('playerID', 'yearID'))
# Get lost boys data
lostBoys <- subset(mergedDataFrame, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
# Get only year 2001
lostBoys <- subset(lostBoys, yearID == 2001)
# Reduce the columns to only wanted ones
wantedColumns <- c('playerID','H','2B','3B','HR','OBP','SLG','BA','AB')
lostBoys <- select(lostBoys, wantedColumns)
head(lostBoys)
mergedDataFrame <- subset(mergedDataFrame, yearID == 2001)
maxSalary <- 15000000
maxAB <- sum(mergedDataFrame$AB, na.rm = TRUE)
lostBoysOBPMean <- mean(lostBoys$OBP)
# Plot some data cause I don't know what to do
mergedDataFrame <- select(mergedDataFrame, c('playerID', 'OBP', 'AB', 'salary'))
mergedDataFrame
lostBoysABTotal <- sum(lostBoys, AB, na.rm = TRUE)
lostBoysABTotal <- sum(lostBoys$AB, na.rm = TRUE)
